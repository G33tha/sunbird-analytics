# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="DFHdR74?tDvH2n`DAqk:RBl6NfkoO5tNYblTRmf3ZLcDIp5@oVjJM^ypkDOf2`<A"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

spark.cassandra.connection.host="127.0.0.1"

# Content to vec configurations
content2vec.content_service_url="https://dev.ekstep.in/api/learning"
content2vec.scripts_path="../../platform-scripts/python/main/vidyavaani"
content2vec.enrich_content="true"
content2vec.train_model="false"
content2vec.content_corpus="true"
content2vec.infer_query="true"
content2vec.s3_bucket="lpdev-ekstep"
content2vec.s3_key_prefix="DataSciences/model/"
content2vec.model_path="/tmp/content2vec/model/"
content2vec.kafka_topic="sandbox.learning.graph.events"
content2vec.kafka_broker_list="localhost:9092"
content2vec.infer_all="false"
content2vec.corpus_path="/tmp/content2vec/content_corpus/"
content2vec.download_path="/tmp/content2vec/download/"
content2vec.download_file_prefix="temp_"
content2vec.train_model_job="src/test/resources/run-job.sh ctv &"
recommendation.train_model_job="src/test/resources/run-job.sh device-recos &"


# Recommendations configurations
service.search.url="https://dev.ekstep.in/api/search"
service.search.path="/v2/search"
service.search.requestbody="""{"request":{"filters":{"objectType":["Content"],"contentType":["Story","Worksheet","Collection","Game"],"status":["Live"]},"limit":1000}}"""
service.search.limit="10"
recommendation.enable=false

dataproduct.scripts_path=src/test/resources

# Metrics API configuration
#metrics.search.type="s3"
#metrics.search.params={"bucket":"sandbox-data-store", "path":"metrics/"}
metrics.search.type="local"
metrics.search.params={"bucket":"", "path":"test/resources/metrics/"}
metrics.period.format.day="MMM dd EEE"
metrics.period.format.month="MMM YYYY"
metrics.period.format.year="YYYY"


# Data Exhaust API
dataExhaust.job.brokerList="localhost:9092"
dataExhaust.job.topic="test.analytics.job_queue"
dataExhaust.job.kafka_push="false"
dataExhaust.data.brokerList="172.31.1.92:9092"
dataExhaust.data.topic="sandbox.telemetry.derived" 
data_exhaust.s3_bucket="data_exhaust"
data_exhaust.jobs.list.limit=100

# Log4j Kafka appender config
log4j.appender.kafka.enable="false"
log4j.appender.kafka.broker_host="172.31.1.92:9092"
log4j.appender.kafka.topic="sandbox.telemetry.backend"
